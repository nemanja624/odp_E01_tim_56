generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role { STUDENT PROFESSOR }
enum ReactionValue { LIKE DISLIKE }

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  passwordHash String
  name         String
  role         Role
  enrollments  Enrollment[]
  announcements Announcement[] @relation("AnnouncementAuthor")
  comments     Comment[]
  createdAt    DateTime  @default(now())
}

model Course {
  id            Int            @id @default(autoincrement())
  code          String         @unique
  name          String
  description   String?
  enrollments   Enrollment[]
  announcements Announcement[]
  materials     Material[]
  createdAt     DateTime       @default(now())
}

model Enrollment {
  userId   Int
  courseId Int
  user     User   @relation(fields: [userId], references: [id])
  course   Course @relation(fields: [courseId], references: [id])
  createdAt DateTime @default(now())
  @@id([userId, courseId])
}

model Announcement {
  id         Int       @id @default(autoincrement())
  courseId   Int
  authorId   Int
  title      String?
  content    String
  imageUrl   String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  course     Course    @relation(fields: [courseId], references: [id])
  author     User      @relation("AnnouncementAuthor", fields: [authorId], references: [id])
  comments   Comment[]
  reactions  Reaction[]
}

model Material {
  id         Int      @id @default(autoincrement())
  courseId   Int
  title      String
  description String?
  fileUrl    String
  mimeType   String
  uploadedBy Int
  createdAt  DateTime @default(now())
  course     Course   @relation(fields: [courseId], references: [id])
}

model Comment {
  id             Int          @id @default(autoincrement())
  announcementId Int
  userId         Int
  content        String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  announcement   Announcement @relation(fields: [announcementId], references: [id])
  user           User         @relation(fields: [userId], references: [id])
}

model Reaction {
  id             Int          @id @default(autoincrement())
  announcementId Int
  userId         Int
  value          ReactionValue
  announcement   Announcement @relation(fields: [announcementId], references: [id])
  user           User         @relation(fields: [userId], references: [id])
  @@unique([announcementId, userId])
}
